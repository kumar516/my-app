{"version":3,"sources":["actions/constants.js","actions/homePageActions.js","components/homePage/homePage.js","components/header/header.js","store.js","reducers/reducers.js","components/cart/cartPage.js","App.js","reportWebVitals.js","index.js"],"names":["GET_LIST","CART_DATA","addtoCart","data","dispatch","type","payload","Homepage","undefined","this","props","itemlist","getData","res","cartlist","cartItems","push","id","productId","gender","color","primaryColour","img","searchImage","brand","product","price","ratings","rating","sizes","Fragment","className","Container","maxWidth","Grid","container","spacing","products","map","item","xs","sm","md","lg","xl","src","alt","Rating","name","precision","value","parseFloat","readOnly","some","li","Button","onClick","onAddCart","variant","to","disabled","Component","connect","state","fetch","then","response","json","Header","AppBar","position","Toolbar","IconButton","edge","length","store","createStore","action","applyMiddleware","thunk","CartPage","newItems","filter","App","path","exact","component","HomePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c39d6e2.chunk.js","sourcesContent":["export const GET_LIST = \"GET_LIST\";\nexport const CART_DATA = \"CART_DATA\"","import { CART_DATA, GET_LIST } from \"./constants\"\n\nexport const getData = () => {\n    return (dispatch) => {\n        fetch(`https://run.mocky.io/v3/05e9651d-528e-4d7c-a60b-bae8f09684c6`)\n            .then(response => response.json())\n            .then(state =>  dispatch({\n                type: GET_LIST,\n                payload: state\n            }));\n       \n    }\n}\n\nexport const addtoCart = (data) => {\n    return (dispatch) => {\n        dispatch({\n            type: CART_DATA,\n            payload: data\n        })\n    }\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addtoCart, getData } from '../../actions/homePageActions';\nimport \"../../css/homePage.css\";\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\n\nclass Homepage extends Component {\n    componentDidMount() {\n        if (this.props.itemlist == undefined) {\n            this.props.getData()\n        }\n    }\n\n    onAddCart(res) {\n        if (this.props.cartlist != undefined) {\n            let cartItems = []\n            cartItems = [...this.props.cartlist]\n            cartItems.push({\n                id: res.productId,\n                gender: res.gender,\n                color: res.primaryColour,\n                img: res.searchImage,\n                brand: res.brand,\n                product: res.product,\n                price: res.price,\n                ratings: res.rating,\n                sizes: res.sizes\n            })\n            this.props.addtoCart(cartItems)\n        }\n        else {\n            let cartItems = [{\n                id: res.productId,\n                gender: res.gender,\n                color: res.primaryColour,\n                img: res.searchImage,\n                brand: res.brand,\n                product: res.product,\n                price: res.price,\n                ratings: res.rating,\n                sizes: res.sizes\n            }]\n            this.props.addtoCart(cartItems)\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"home_page_container\">\n                    <Container className=\"container\" maxWidth=\"xl\">\n                        <Grid className=\"grid_container\" container spacing={4}>\n                            {this.props.itemlist != undefined ? this.props.itemlist.products.map(res =>\n                                <Grid item xs={12} sm={6} md={6} lg={3} xl={3} key={res.productId}>\n                                    <div className=\"item_container\">\n                                        <div className=\"first_row\">\n                                            <div className=\"gender\">Gender: <span>{res.gender}</span></div>\n                                            <div className=\"color\">Color: <span>{res.primaryColour}</span></div>\n                                        </div>\n                                        <div className=\"image_container\">\n                                            <img src={res.searchImage} alt=\"img\" />\n                                        </div>\n                                        <div className=\"brand\">{res.brand}</div>\n                                        <div className=\"product_name\">{res.product}</div>\n                                        <div className=\"price_container\">\n                                            <div className=\"price\">â‚¹ {res.price}</div>\n                                            <Rating name=\"half-rating-read\" precision={0.5} value={parseFloat(res.rating)} readOnly />\n                                        </div>\n                                        <div className=\"size_container\">Size: <span>{res.sizes}</span></div>\n                                        {this.props.cartlist != undefined ? this.props.cartlist.some(li => li.id == res.productId) == false ?\n                                            <Button\n                                                onClick={() => this.onAddCart(res)}\n                                                className=\"button_container\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                            >\n                                                Add to Cart\n                                            </Button> :\n                                            <Link to={\"/cart\"} className=\"cart_icon\">\n                                                <Button\n                                                    onClick={() => this.onAddCart(res)}\n                                                    className=\"button_container disable_btn\"\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    disabled\n                                                >\n                                                    Go to Cart\n                                                </Button>\n                                            </Link>\n                                            : <Button\n                                                onClick={() => this.onAddCart(res)}\n                                                className=\"button_container\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                            >\n                                                Add to Cart\n                                            </Button>}\n                                    </div>\n                                </Grid>\n                            ) : <div>Loading...</div>}\n                        </Grid>\n                    </Container>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    itemlist: state.itemlist,\n    cartlist: state.cartlist\n})\n\nconst mapDispatchToProps = dispatch => ({\n    getData: () => dispatch(getData()),\n    addtoCart: (data) => dispatch(addtoCart(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport HomeIcon from '@material-ui/icons/Home';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport React, { Component } from \"react\";\nimport \"../../css/header.css\";\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <AppBar position=\"sticky\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon />\n                            <div className=\"header_name\">Shopping App</div>\n                        </IconButton>\n                        <div className=\"icon_main_container\">\n                            <Link to={\"/homepage\"} className=\"cart_icon\">\n                                <HomeIcon className=\"icon_container\" />\n                            </Link>\n                            <div className=\"icon_container1\">\n                                <div className=\"cart_count\">\n                                    <div className=\"cart_no\">\n                                        {this.props.cartlist != undefined ? this.props.cartlist.length : \"0\"}\n                                    </div>\n                                </div>\n                                <Link to={\"/cart\"} className=\"cart_icon\">\n                                    <ShoppingCartIcon />\n                                </Link>\n                            </div>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    cartlist: state.cartlist\n})\n\nexport default connect(mapStateToProps)(Header);","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Reducers from './reducers/reducers';\n\nexport const store = createStore(\n    Reducers,\n    applyMiddleware(thunk)\n);","import { CART_DATA, GET_LIST } from \"../actions/constants\";\n\nexport default function Reducers(state = {}, action) {\n    switch (action.type) {\n        case GET_LIST:\n            return ({ ...state, itemlist: action.payload })\n        case CART_DATA:\n            return ({ ...state, cartlist: action.payload })\n        default:\n            return state;\n    }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addtoCart } from '../../actions/homePageActions';\nimport \"../../css/homePage.css\";\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\n\nclass CartPage extends Component {\n    onAddCart(res) {\n        let cartItems = [...this.props.cartlist]\n        let newItems = cartItems.filter(li=>li.id!=res.id)\n        this.props.addtoCart(newItems)\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"cart_page_container\">\n                    <Container className=\"container\" maxWidth=\"xl\">\n                        <div className=\"cart_items\">My Cart</div>\n                        <Grid className=\"grid_container\" container spacing={4}>\n                            {this.props.cartlist != undefined ? this.props.cartlist.map(res =>\n                                <Grid item xs={12} sm={6} md={6} lg={3} xl={3} key={res.id}>\n                                    <div className=\"item_container\">\n                                        <div className=\"first_row\">\n                                            <div className=\"gender\">Gender: <span>{res.gender}</span></div>\n                                            <div className=\"color\">Color: <span>{res.color}</span></div>\n                                        </div>\n                                        <div className=\"image_container\">\n                                            <img src={res.img} alt=\"img\" />\n                                        </div>\n                                        <div className=\"brand\">{res.brand}</div>\n                                        <div className=\"product_name\">{res.product}</div>\n                                        <div className=\"price_container\">\n                                            <div className=\"price\">â‚¹ {res.price}</div>\n                                            <Rating name=\"half-rating-read\" precision={0.5} value={parseFloat(res.ratings)} readOnly />\n                                        </div>\n                                        <div className=\"size_container\">Size: <span>{res.sizes}</span></div>\n                                            <Button\n                                                onClick={() => this.onAddCart(res)}\n                                                className=\"button_container\"\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                            >\n                                                Remove \n                                            </Button>\n                                    </div>\n                                </Grid>\n                            ) : <div className=\"err_msg\">No items in cart.</div>}\n                        </Grid>\n                    </Container>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    cartlist: state.cartlist\n})\n\nconst mapDispatchToProps = dispatch => ({\n    addtoCart: (data) => dispatch(addtoCart(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);","import React, { Component } from 'react';\nimport HomePage from './components/homePage/homePage';\nimport Header from './components/header/header';\nimport { Provider } from 'react-redux'\nimport { store } from './store';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { HashRouter } from 'react-router-dom';\nimport CartPage from './components/cart/cartPage';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"App\">\n            <Header />\n            <Switch>\n              <Route path={'/'} exact component={HomePage} />\n              <Route path={\"/homepage\"} component={HomePage} />\n              <Route path={\"/cart\"} component={CartPage} />\n            </Switch>\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}